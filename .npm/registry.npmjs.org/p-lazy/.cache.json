{"_id":"p-lazy","_rev":"2-90cce30b6e023d116d3500f307c0e72b","name":"p-lazy","description":"Create a lazy promise that defers execution until `.then()` or `.catch()` is called","dist-tags":{"latest":"1.0.0"},"versions":{"1.0.0":{"name":"p-lazy","version":"1.0.0","description":"Create a lazy promise that defers execution until `.then()` or `.catch()` is called","license":"MIT","repository":{"type":"git","url":"git+https://github.com/sindresorhus/p-lazy.git"},"author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"engines":{"node":">=4"},"scripts":{"test":"xo && ava"},"files":["index.js"],"keywords":["promise","lazy","defer","deferred","then","catch","fulfilled","async","function","await","promises","bluebird"],"devDependencies":{"ava":"*","delay":"^1.3.1","xo":"*"},"xo":{"esnext":true},"gitHead":"9d240009f7ecc2217889304e7cfe4f21d985e442","bugs":{"url":"https://github.com/sindresorhus/p-lazy/issues"},"homepage":"https://github.com/sindresorhus/p-lazy#readme","_id":"p-lazy@1.0.0","_shasum":"ec53c802f2ee3ac28f166cc82d0b2b02de27a835","_from":".","_npmVersion":"2.15.9","_nodeVersion":"4.6.1","_npmUser":{"name":"sindresorhus","email":"sindresorhus@gmail.com"},"dist":{"shasum":"ec53c802f2ee3ac28f166cc82d0b2b02de27a835","tarball":"https://registry.npmjs.org/p-lazy/-/p-lazy-1.0.0.tgz"},"maintainers":[{"name":"sindresorhus","email":"sindresorhus@gmail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/p-lazy-1.0.0.tgz_1478510599877_0.9282662672922015"},"directories":{}}},"readme":"# p-lazy [![Build Status](https://travis-ci.org/sindresorhus/p-lazy.svg?branch=master)](https://travis-ci.org/sindresorhus/p-lazy)\n\n> Create a lazy promise that defers execution until `.then()` or `.catch()` is called\n\nUseful if you're doing some heavy operations and would like to only do it when the promise is actually used.\n\n\n## Install\n\n```\n$ npm install --save p-lazy\n```\n\n\n## Usage\n\n```js\nconst PLazy = require('p-lazy');\n\nconst lazyPromise = new PLazy(resolve => {\n\tsomeHeavyOperation(resolve);\n});\n\n// `someHeavyOperation` is not yet called\n\ndoSomethingFun.then(() => {\n\t// `someHeavyOperation` is called\n\tlazyPromise.then(console.log);\n});\n```\n\n\n## API\n\n### new PLazy(executor)\n\nSame as the [`Promise` constructor](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Promise). `PLazy` is a subclass of `Promise`.\n\n### PLazy.from(fn)\n\nCreate a `PLazy` promise from a promise-returning or async function.\n\n\n## Related\n\n- [p-defer](https://github.com/sindresorhus/p-defer) - Create a deferred promise\n- [More…](https://github.com/sindresorhus/promise-fun)\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n","maintainers":[{"name":"sindresorhus","email":"sindresorhus@gmail.com"}],"time":{"modified":"2017-03-10T09:20:21.993Z","created":"2016-11-07T09:23:20.098Z","1.0.0":"2016-11-07T09:23:20.098Z"},"homepage":"https://github.com/sindresorhus/p-lazy#readme","keywords":["promise","lazy","defer","deferred","then","catch","fulfilled","async","function","await","promises","bluebird"],"repository":{"type":"git","url":"git+https://github.com/sindresorhus/p-lazy.git"},"author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/p-lazy/issues"},"license":"MIT","readmeFilename":"readme.md","users":{"rocket0191":true},"_attachments":{},"_etag":"\"58c26fd5-d9e\"","_lastModified":"Fri, 10 Mar 2017 9:20:21 GMT"}